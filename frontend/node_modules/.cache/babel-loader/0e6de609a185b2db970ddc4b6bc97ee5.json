{"ast":null,"code":"import _classCallCheck from\"C:/Users/AntonAA/Desktop/mesto/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/AntonAA/Desktop/mesto/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";export var Api=/*#__PURE__*/function(){function Api(_ref){var url=_ref.url;_classCallCheck(this,Api);this._url=url;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(jwt){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"GET\",headers:{Authorization:\"Bearer \".concat(jwt),\"Content-Type\":\"application/json\"}}).then(this._checkResponse);}},{key:\"patchUserInfo\",value:function patchUserInfo(name,about,jwt){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:{Authorization:\"Bearer \".concat(jwt),\"Content-Type\":\"application/json\"},body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(jwt){return fetch(\"\".concat(this._url,\"/cards \"),{method:\"GET\",headers:{Authorization:\"Bearer \".concat(jwt),\"Content-Type\":\"application/json\"}}).then(this._checkResponse);}},{key:\"postNewCard\",value:function postNewCard(name,link,jwt){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"POST\",headers:{Authorization:\"Bearer \".concat(jwt),\"Content-Type\":\"application/json\"},body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(id,jwt){return fetch(\"\".concat(this._url,\"/cards/\").concat(id),{method:\"DELETE\",headers:{Authorization:\"Bearer \".concat(jwt)}}).then(this._checkResponse);}},{key:\"patchNewAvatar\",value:function patchNewAvatar(avatarUrl,jwt){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:{Authorization:\"Bearer \".concat(jwt),\"Content-Type\":\"application/json\"},body:JSON.stringify({avatar:avatarUrl})}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,status,jwt){return status?this._setLike(cardId,jwt):this._removeLike(cardId,jwt);}},{key:\"_setLike\",value:function _setLike(id,jwt){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"PUT\",headers:{Authorization:\"Bearer \".concat(jwt)}}).then(this._checkResponse);}},{key:\"_removeLike\",value:function _removeLike(id,jwt){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"DELETE\",headers:{Authorization:\"Bearer \".concat(jwt)}}).then(this._checkResponse);}}]);return Api;}();export var api=new Api({url:\"https://api.praime.nomoredomains.work\"});","map":{"version":3,"sources":["C:/Users/AntonAA/desktop/mesto/frontend/src/utils/Api.js"],"names":["Api","url","_url","res","ok","json","Promise","reject","status","jwt","fetch","method","headers","Authorization","then","_checkResponse","name","about","body","JSON","stringify","link","id","avatarUrl","avatar","cardId","_setLike","_removeLike","api"],"mappings":"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","sourcesContent":["export class Api {\n  constructor({ url }) {\n    this._url = url;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserInfo(jwt) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(this._checkResponse);\n  }\n\n  patchUserInfo(name, about, jwt) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards(jwt) {\n    return fetch(`${this._url}/cards `, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(this._checkResponse);\n  }\n\n  postNewCard(name, link, jwt) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id, jwt) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n      },\n    }).then(this._checkResponse);\n  }\n\n  patchNewAvatar(avatarUrl, jwt) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: avatarUrl,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, status, jwt) {\n    return status ? this._setLike(cardId, jwt) : this._removeLike(cardId, jwt);\n  }\n\n  _setLike(id, jwt) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n      },\n    }).then(this._checkResponse);\n  }\n\n  _removeLike(id, jwt) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n      },\n    }).then(this._checkResponse);\n  }\n}\n\nexport const api = new Api({\n  url: \"https://api.praime.nomoredomains.work\",\n});\n"]},"metadata":{},"sourceType":"module"}