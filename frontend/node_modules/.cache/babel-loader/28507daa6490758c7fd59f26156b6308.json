{"ast":null,"code":"import _classCallCheck from\"/home/praime/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/praime/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";var Auth=/*#__PURE__*/function(){function Auth(_ref){var baseUrl=_ref.baseUrl;_classCallCheck(this,Auth);this._url=baseUrl;}_createClass(Auth,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"register\",value:function register(password,email){return fetch(\"\".concat(this._url,\"/signup\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(this._checkResponse);}},{key:\"authorization\",value:function authorization(password,email){return fetch(\"\".concat(this._url,\"/signin\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(this._checkResponse);}},{key:\"checkToken\",value:function checkToken(jwt){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json',\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(jwt)}}).then(this._checkResponse);}}]);return Auth;}();var authConfigg={baseUrl:'https://api.praime.nomoredomains.work'};var auth=new Auth(authConfigg);export default auth;","map":{"version":3,"sources":["/home/praime/react-mesto-api-full/frontend/src/utils/MestoAuth.js"],"names":["Auth","baseUrl","_url","res","ok","json","Promise","reject","status","password","email","fetch","method","headers","body","JSON","stringify","then","_checkResponse","jwt","authConfigg","auth"],"mappings":"2PACOA,CAAAA,I,yBACH,mBAAyB,IAAXC,CAAAA,OAAW,MAAXA,OAAW,4BACvB,KAAKC,IAAL,CAAYD,OAAZ,CACD,C,+CAED,wBAAeE,GAAf,CAAoB,CAChB,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,gDAAyBJ,GAAG,CAACK,MAA7B,EAAP,CACD,C,wBAEG,kBAASC,QAAT,CAAmBC,KAAnB,CAA0B,CAC1B,MAAOC,CAAAA,KAAK,WAAI,KAAKT,IAAT,YAAwB,CAChCU,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,CACT,eAAgB,kBADP,CAFuB,CAKhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACrBP,QAAQ,CAAEA,QADW,CAErBC,KAAK,CAAEA,KAFc,CAAf,CAL0B,CAAxB,CAAL,CAURO,IAVQ,CAUH,KAAKC,cAVF,CAAP,CAWH,C,6BAGD,uBAAcT,QAAd,CAAwBC,KAAxB,CAA+B,CAC3B,MAAOC,CAAAA,KAAK,WAAI,KAAKT,IAAT,YAAwB,CAClCU,MAAM,CAAE,MAD0B,CAElCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFyB,CAKlCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,QAAQ,CAAEA,QADS,CAEnBC,KAAK,CAAEA,KAFY,CAAf,CAL4B,CAAxB,CAAL,CAUNO,IAVM,CAUD,KAAKC,cAVJ,CAAP,CAWD,C,0BAID,oBAAWC,GAAX,CAAgB,CACd,MAAOR,CAAAA,KAAK,WAAI,KAAKT,IAAT,cAA0B,CACpCU,MAAM,CAAE,KAD4B,CAEpCC,OAAO,CAAE,CACN,SAAU,kBADJ,CAEP,eAAgB,kBAFT,CAGP,iCAA4BM,GAA5B,CAHO,CAF2B,CAA1B,CAAL,CAQNF,IARM,CAQD,KAAKC,cARJ,CAAP,CASD,C,oBAOP,GAAME,CAAAA,WAAW,CAAG,CAClBnB,OAAO,CAAE,uCADS,CAApB,CAIA,GAAMoB,CAAAA,IAAI,CAAG,GAAIrB,CAAAA,IAAJ,CAASoB,WAAT,CAAb,CAEA,cAAeC,CAAAA,IAAf","sourcesContent":["\n class Auth {\n    constructor( {baseUrl} ) {\n      this._url = baseUrl;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n          return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    } \n\n        register(password, email) {\n        return fetch(`${this._url}/signup`, {\n            method: 'POST',\n            headers: {\n            \"Content-Type\": \"application/json\" \n            },\n            body: JSON.stringify({\n            password: password,\n            email: email\n            })\n        })\n      .then(this._checkResponse)\n    };\n\n\n    authorization(password, email) {\n        return fetch(`${this._url}/signin`, {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\" \n          },\n          body: JSON.stringify({\n            password: password,\n            email: email\n          })\n        })\n        .then(this._checkResponse)\n      };\n\n\n      \n      checkToken(jwt) {\n        return fetch(`${this._url}/users/me`, {\n          method: 'GET',\n          headers: {\n             'Accept': 'application/json',\n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : `Bearer ${jwt}`\n          }\n        })\n        .then(this._checkResponse)\n      };\n\n\n\n}\n\n\nconst authConfigg = {\n  baseUrl: 'https://api.praime.nomoredomains.work',\n}\n\nconst auth = new Auth(authConfigg);\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}