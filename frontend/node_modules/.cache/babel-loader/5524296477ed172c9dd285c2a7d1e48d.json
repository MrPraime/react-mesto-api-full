{"ast":null,"code":"import _classCallCheck from\"/home/praime/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/praime/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";export var Api=/*#__PURE__*/function(){function Api(_ref){var url=_ref.url,headers=_ref.headers;_classCallCheck(this,Api);this._url=url;this._headers=headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(jwt){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'GET',headers:{Authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'}}).then(this._checkResponse);}},{key:\"patchUserInfo\",value:function patchUserInfo(name,about,jwt){// loading(true); \nreturn fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:{Authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'},body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(Jwt){return fetch(\"\".concat(this._url,\"/cards \"),{method:'GET',headers:{Authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'}}).then(this._checkResponse);}},{key:\"postNewCard\",value:function postNewCard(name,link,jwt){return fetch(\"\".concat(this._url,\"/cards \"),{method:'POST',headers:{Authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'},body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(id,jwt){return fetch(\"\".concat(this._url,\"/cards/\").concat(id),{method:\"DELETE\",headers:{Authorization:\"Bearer \".concat(jwt)}}).then(this._checkResponse);}},{key:\"patchNewAvatar\",value:function patchNewAvatar(avatarUrl,jwt){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:{Authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'},body:JSON.stringify({avatar:avatarUrl})}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,status){return status?this._setLike(cardId):this._removeLike(cardId);}},{key:\"_setLike\",value:function _setLike(id,jwt){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"PUT\",headers:{Authorization:\"Bearer \".concat(jwt)}}).then(this._checkResponse);}},{key:\"_removeLike\",value:function _removeLike(id,jwt){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:'PUT',headers:{Authorization:\"Bearer \".concat(jwt)}}).then(this._checkResponse);}}]);return Api;}();export var api=new Api({url:\"https://api.praime.nomoredomains.work\"});// export default api;","map":{"version":3,"sources":["/home/praime/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["Api","url","headers","_url","_headers","res","ok","json","Promise","reject","status","jwt","fetch","method","Authorization","then","_checkResponse","name","about","body","JSON","stringify","Jwt","link","id","avatarUrl","avatar","cardId","_setLike","_removeLike","api"],"mappings":"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","sourcesContent":["export class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n  }\n  return Promise.reject(`Ошибка ${res.status}`);\n} \n\n  getUserInfo(jwt) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._checkResponse)\n     \n  }\n\n  patchUserInfo(name, about, jwt) {\n    // loading(true); \n    return fetch(`${this._url}/users/me`, {\nmethod: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    })\n    .then(this._checkResponse)  \n  }\n\n  \n\n  getInitialCards(Jwt) {\n    return fetch(`${this._url}/cards `, {\n       method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._checkResponse)\n\n  }\n\n  postNewCard(name, link, jwt) {\n    return fetch(`${this._url}/cards `, {\n       method: 'POST',\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    })\n    .then(this._checkResponse)\n\n  }\n\n  deleteCard(id, jwt) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n      }\n\n    })\n    .then(this._checkResponse)\n     \n  }\n\n  patchNewAvatar(avatarUrl, jwt) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n\n\n      body: JSON.stringify({\n        avatar: avatarUrl,\n      }),\n    })\n    .then(this._checkResponse)     \n  }\n\n\n  changeLikeCardStatus(cardId, status) {\n    return status ? this._setLike(cardId) : this._removeLike(cardId);\n}\n\n_setLike(id, jwt) {\n  return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"PUT\",\n       headers: {\n        Authorization: `Bearer ${jwt}`,\n}\n})\n  .then(this._checkResponse);\n}\n\n_removeLike(id, jwt) {\n  return fetch(`${this._url}/cards/likes/${id}`, {\n   method: 'PUT',\n       headers: {\n        Authorization: `Bearer ${jwt}`,\n}\n  })\n  .then(this._checkResponse);\n}\n\n\n}\n\nexport  const api = new Api({\n  url: \"https://api.praime.nomoredomains.work\",\n});\n\n// export default api;\n"]},"metadata":{},"sourceType":"module"}