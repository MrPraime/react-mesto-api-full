{"ast":null,"code":"import _classCallCheck from\"/home/praime/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/praime/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";export var Api=/*#__PURE__*/function(){function Api(_ref){var url=_ref.url,headers=_ref.headers;_classCallCheck(this,Api);this._url=url;this._headers=headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"patchUserInfo\",value:function patchUserInfo(name,about){// loading(true); \nreturn fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:this._headers,\"Content-Type\":\"application/json\",body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards \"),{headers:this._headers}).then(this._checkResponse);}},{key:\"postNewCard\",value:function postNewCard(name,link){return fetch(\"\".concat(this._url,\"/cards \"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._url,\"/cards/\").concat(id),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"patchNewAvatar\",value:function patchNewAvatar(avatarUrl){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:avatarUrl})}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,status){return status?this._setLike(cardId):this._removeLike(cardId);}},{key:\"_setLike\",value:function _setLike(id){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"PUT\",headers:this._headers}).then(this._checkResponse);}},{key:\"_removeLike\",value:function _removeLike(id){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}}]);return Api;}();export var api=new Api({url:\"https://api.praime.nomoredomains.work\",headers:{authorization:\"ef54a2bc-9421-42c0-a501-09b713e96a02\",\"Content-Type\":\"application/json\"}});// export default api;","map":{"version":3,"sources":["/home/praime/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["Api","url","headers","_url","_headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","name","about","method","body","JSON","stringify","link","id","avatarUrl","avatar","cardId","_setLike","_removeLike","api","authorization"],"mappings":"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","sourcesContent":["export class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n  }\n  return Promise.reject(`Ошибка ${res.status}`);\n} \n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    })\n    .then(this._checkResponse)\n     \n  }\n\n  patchUserInfo(name, about) {\n    // loading(true); \n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      \"Content-Type\": \"application/json\",\n\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    })\n    .then(this._checkResponse)  \n  }\n\n  \n\n  getInitialCards() {\n    return fetch(`${this._url}/cards `, {\n      headers: this._headers,\n    })\n    .then(this._checkResponse)\n\n  }\n\n  postNewCard(name, link) {\n    return fetch(`${this._url}/cards `, {\n      method: \"POST\",\n      headers: this._headers,\n\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    })\n    .then(this._checkResponse)\n\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse)\n     \n  }\n\n  patchNewAvatar(avatarUrl) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n\n      body: JSON.stringify({\n        avatar: avatarUrl,\n      }),\n    })\n    .then(this._checkResponse)     \n  }\n\n\n  changeLikeCardStatus(cardId, status) {\n    return status ? this._setLike(cardId) : this._removeLike(cardId);\n}\n\n_setLike(id) {\n  return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers})\n  .then(this._checkResponse);\n}\n\n_removeLike(id) {\n  return fetch(`${this._url}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n  })\n  .then(this._checkResponse);\n}\n\n\n}\n\nexport  const api = new Api({\n  url: \"https://api.praime.nomoredomains.work\",\n  headers: {\n    authorization: \"ef54a2bc-9421-42c0-a501-09b713e96a02\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// export default api;\n"]},"metadata":{},"sourceType":"module"}